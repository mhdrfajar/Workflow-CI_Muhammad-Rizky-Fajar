name: CI Workflow MLflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  FEATURES_CSV_URL: "MLProject/telco_customer_churn_preprocessed_X.csv"
  TARGET_CSV_URL: "MLProject/telco_customer_churn_preprocessed_y.csv"
  TARGET_VAR: "Churn_Encoded"
  
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Check out the repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v3

      # Setup Python 3.12.7
      - name: Set up Python 3.12.7
        uses: actions/setup-python@v4
        with:
          python-version: "3.12.7"
      
      # Check Environment Variables
      - name: Check Env
        run: |
          echo $FEATURES_CSV_URL
          echo $TARGET_CSV_URL

      # Install dependencies (including MLflow, Dagshub, and other necessary libraries)
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mlflow dagshub feature-engine pandas scikit-learn

      # Run the MLflow project
      - name: Run mlflow project
        run: |
          mlflow run MLProject --env-manager=local

      # Get latest run_id
      - name: Get latest MLflow run_id
        run: |
          RUN_ID=$(ls -td mlruns/0/*/ | head -n 1 | cut -d'/' -f3)
          echo "RUN_ID=$RUN_ID" >> $GITHUB_ENV
          echo "Latest run_id: $RUN_ID"

      # Upload Confusion Matrix to GitHub Artifacts
      - name: Upload confusion matrix artifact
        uses: actions/upload-artifact@v4
        with:
          name: trained-model-artifacts
          path: MLProject/conf_matrix.png
          
      # Upload input example to GitHub Artifacts
      - name: Upload input example artifact
        uses: actions/upload-artifact@v4
        with:
          name: input-example-artifact
          path: MLProject/input_example.csv

      # Build Docker Model
      - name: Build Docker Model
        run: |
          mlflow models build-docker --model-uri "runs:/$RUN_ID/model" --name "msml" 

      # Login to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # Tag the Docker image
      - name: Tag Docker Image
        run: |
          docker tag msml ${{ secrets.DOCKER_HUB_USERNAME }}/msml:latest

      # Push Docker image to Docker Hub
      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/msml:latest
